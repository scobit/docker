docker engine - сам установленный docker на ПК 

контейнер собирается в полностью изолированном окружении, это же касается и сетевое окружения
если мы явно не укажем как пробросить порт, то ничего не произойдёт.


DOCKER !== VM

Virtual Machines предоставляют нам hardware level virtualization в то время
как Docker Containers предоставляют operating system level virtualization.

DOKCER ПОД КАПОТОМ
Изначально Docker использовал LinuX Containers (LXC)
Сейчас Docker использует runC (известный как libcontainer)

Virtual Machine: состоит из приложения, связанных библиотек и исходного кода и
отдельной ОС. Каждая виртуальная машина получает часть ОЗУ и ЦП хост-машины.

Docker Container: получает своё собственное изолированное пространство,
которое содержит само приложение и относящийся к нему исходный код

преимущество docker
runtime isolation
Портативность
Быстрая доставка и развёртывание приложений

в docker в отличии от vm нет слоя guest OS

Docker — программное обеспечение для автоматизации развёртывания и
управления приложениями в средах с поддержкой контейнеризации

ПРОИСХОЖДЕНИЕ

Первый релиз был опубликован 13 марта 2013 года
Автор — Соломоном Хайксом (Solomon Hykes)
Соавторы — Андреа Лудзарди (Andrea Luzzardi) и Франсуа-Ксавье Бурле (FrançoisXavier Bourlet).


ОСОБЕННОСТИ
Open-source
Enterprise
Cross-platform 
Написан на Go

ОБЛАСТИ ПРИМЕНЕНИЯ
Контейнеризация Web приложений
Построение отказоустойчивых систем
Kubernetes
Тестирование Web приложений
CI/CD

ПОПУЛЯРНОСТЬ
Большие возможности
Возможность предоставить заказчику готовый продукт
Огромное комьюнити
Низкий порог входа
Малое потребление ресурсов
Используют миллионы людей во всём мире
Огромное количество готовых Docker образов

УСТАНОВКА: WINDOWS
Windows 10 64bit: Pro, Enterprise or Education (1607 Update, Build 14393 or later)
Virtualization is enabled in BIOS.
CPU SLAT-capable feature
At least 4GB of RAM.

УСТАНОВКА: MACOS
Mac hardware must be a 2010 or newer model
macOS Sierra 10.12+
VirtualBox prior to version 4.3.30+ (optional)
At least 4GB of RAM.

УСТАНОВКА: UBUNTU
Linux kernel version 3.10 or higher
512+ Mb of RAM.

ЧТО БУДЕТ УСТАНОВЛЕНО
Docker Engine (Windows, macOS, Ubuntu)
Docker CLI client (Windows, macOS, Ubuntu)
Docker Compose (Windows, macOS)
Docker Machine (Windows, macOS, Ubuntu)

Docker Engine — легковесная среда выполнения, которая управляет
образами, контейнерами, сборками образов и т.д.


Docker Daemon — демон выполняет команды которые были отправлены
клиентом docker. Сборка образов, запуск контейнеров и т.д

Dockerfile — файл с набором инструкций который используется для сборки
образов (docker image

Docker Image — файл состоящий из множества слоёв, который используется
для выполнения кода в докер контейнерах. Read-only template

Union File Systems — своего рода объединяемая (stackable) файловая
система, которая содержит файлы и каталоги разных файловых систем. Они
прозрачно накладываются друг на друга, образуя единую файловую систему

Docker Volumes — часть данных контейнеров которые ссылаются на внешние
носители. Перзистентно сохранять данные внутри контейнеров можно
только при наличии docker volumes. 

Docker Container — это стандартная единица программного обеспечения,
которая упаковывает код и все его зависимости. Контейнеры создаются на
основе docker image (образов)








для понимания сфомулируем проблему и поймём для чего он создавалася и что он делает.

1. В процессе разработки используется одна среда, а прод уже работает на другом сервере. Много времени отнимает настройка среды.

2. предоставление быстрых инструментов разработчику (БД к примеру), удобнее, быстрее и экнономнее чем виртуалка.

3. При большой структуре, экономит ресурсы. К примеру при микросервисной архитектуре из 20 приложений, нужно 20 виртуалок. 

экономия ресурсов и решение задач

аналогия с морскими контейнерами

docker - это средство (механизм) единой упаковки(сборки), доствки и запуска приложений

docker image - сборка, готовое к запуску приложение, но не запущенное

контейнер - работающее приложение созданное на базе image

на основе image можно создать множество одинаковых контейнеров

для контейнера образ является read only системой

он никаким образом не может его изменить

аналогия многослойности - ос -> окружение -> приложение

реестр image находится локально

dockerhub - реестр docker image


каждая команда в Dockerfile создаёт новый слой

у каждого слоя мы можем посчитать сумму SHA256

контейнер работает до тех пор пока работает приложение, т.к. основная задача докера это запуск-работа приложения
